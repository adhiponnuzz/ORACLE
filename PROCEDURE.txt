SELECT * FROM BOOK_TABLE;
SELECT * FROM CATEGORY_TABLE;

(1)

CREATE OR REPLACE PROCEDURE LIST_BOOKS
AS
VBOOK BOOK_TABLE.TITLE%TYPE;
VCATEGORYNAME CATEGORY_TABLE.CATEGORY_NAME%TYPE;

CURSOR CUR_CAT
IS 
SELECT TITLE,CATEGORY_NAME FROM BOOK_TABLE B JOIN CATEGORY_TABLE C ON B.CATEGORY_ID=C.CATEGORY_ID;

BEGIN 
  OPEN CUR_CAT;
LOOP
  FETCH CUR_CAT INTO VBOOK,VCATEGORYNAME;
  EXIT WHEN CUR_CAT%NOTFOUND;
  DBMS_OUTPUT.PUT_LINE('BOOK NAME '||VBOOK||'CATEGORY NAME '||VCATEGORYNAME);
  END LOOP;
  DBMS_OUTPUT.PUT_LINE('------------------');
  DBMS_OUTPUT.PUT_LINE('TOTAL RECORDS '||'CUR_CAT%ROWCOUNT');
  CLOSE CUR_CAT;
  END;
 
BEGIN
  LIST_BOOKS();
  END; 

(2)

CREATE OR REPLACE PROCEDURE LIST_BOOKS2
AS
VBOOK BOOK_TABLE.TITLE%TYPE;
VCATEGORYID CATEGORY_TABLE.CATEGORY_ID%TYPE;
VCATEGORYNAME CATEGORY_TABLE.CATEGORY_NAME%TYPE;
VDESCRIPTION CATEGORY_TABLE.DESCRIPTION%TYPE;

CURSOR CUR_CAT2
IS 
SELECT TITLE,B.CATEGORY_ID,CATEGORY_NAME,DESCRIPTION FROM BOOK_TABLE B JOIN CATEGORY_TABLE C ON B.CATEGORY_ID=C.CATEGORY_ID;

BEGIN 
  OPEN CUR_CAT2;
LOOP
  FETCH CUR_CAT2 INTO VBOOK,VCATEGORYID,VCATEGORYNAME,VDESCRIPTION;
  EXIT WHEN CUR_CAT2%NOTFOUND;
  DBMS_OUTPUT.PUT_LINE('BOOK NAME '||VBOOK||' CATEGORY ID '||VCATEGORYID||' CATEGORY NAME '||VCATEGORYNAME||' DESCRIPTION '||VDESCRIPTION);
  END LOOP;
  DBMS_OUTPUT.PUT_LINE('------------------');
  DBMS_OUTPUT.PUT_LINE('TOTAL RECORDS '||'CUR_CAT2%ROWCOUNT');
  CLOSE CUR_CAT2;
  END;

BEGIN
  LIST_BOOKS2();
  END; 

(3)

CREATE OR REPLACE TRIGGER TGR_UPDATE
BEFORE UPDATE ON BOOK_TABLE
FOR EACH ROW
BEGIN
  IF :OLD.QUANTITY != :NEW.QUANTITY THEN
    DBMS_OUTPUT.PUT_LINE('Quantity updated for book "' || :NEW.TITLE || '" from ' ||
                         :OLD.QUANTITY || ' to ' || :NEW.QUANTITY);
  END IF;
END;



    
    UPDATE BOOK_TABLE SET QUANTITY=70 WHERE TITLE='KAYAR';

(4)

CREATE OR REPLACE FUNCTION CHECK_BOOK_STOCK(P_TITLE IN VARCHAR2)
RETURN VARCHAR2
IS
  VQUANTITY BOOK_TABLE.QUANTITY%TYPE;
BEGIN
  SELECT QUANTITY INTO VQUANTITY
  FROM BOOK_TABLE
  WHERE TITLE = P_TITLE;

  IF VQUANTITY > 0 THEN
    RETURN 'IN STOCK';
  ELSE
    RETURN 'OUT OF STOCK';
  END IF;

EXCEPTION
  WHEN NO_DATA_FOUND THEN
    RETURN 'BOOK NOT FOUND';
  WHEN OTHERS THEN
    RETURN 'ERROR OCCURRED';
END;


SELECT CHECK_BOOK_STOCK('KAYAR') AS STOCK_STATUS FROM DUAL;

(5)

CREATE OR REPLACE FUNCTION GET_AUTHOR
RETURN VARCHAR2
IS
  VAUTHOR AUTHOR_TABLE.AUTHOR_NAME%TYPE;
BEGIN
  SELECT AUTHOR_NAME
  INTO VAUTHOR
  FROM (
    SELECT A.AUTHOR_NAME, COUNT(B.BOOK_ID) 
    FROM AUTHOR_TABLE A
    JOIN BOOK_TABLE B ON A.AUTHOR_ID = B.AUTHOR_ID
    GROUP BY A.AUTHOR_NAME
    ORDER BY BOOK_ID DESC
  )
  WHERE ROWNUM = 1;

  RETURN VAUTHOR;

EXCEPTION
  WHEN NO_DATA_FOUND THEN
    RETURN 'NO AUTHORS FOUND';
  WHEN OTHERS THEN
    RETURN 'ERROR OCCURRED';
END;

SELECT GET_AUTHOR() AS MOST_PUBLISHED_AUTHOR FROM DUAL;


SELECT * FROM AUTHOR_TABLE;
